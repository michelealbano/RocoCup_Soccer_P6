<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'><nta>
	<declaration>const int team_members = 5;
const int opponents = 5;
const int tickrate = 4;
const double ball_speed = 15.0 / tickrate;
const double player_speed = 4.0 / tickrate;
const double position_factor = 1.0;
const double possesion_value = 10.0;
const double opponent_possesion_value = -50.0;
const int player_pos[team_members][2] = {{-2, 1},{-13, 7},{-13, -7},{-13, 20},{-12, -21}};
const int opponent_pos[opponents][2] = {{13, -7},{12, -20},{36, -7},{36, 19},{36, -20}};
typedef int[0, team_members - 1] player_id_t;
clock T = 0.0;
hybrid clock reward = 0.0;
chan receive[team_members];
int possesion = 1;
int ball_possesor_x = player_pos[0][0];
int pass_target = -1;
double distance_between(double x1, double y1, double x2, double y2){
    return hypot(x1 - x2, y1 - y2);
}
int time_to_pass(player_id_t from, player_id_t to){
    double distance = distance_between(player_pos[from][0], player_pos[from][1], player_pos[to][0], player_pos[to][1]);
    return fint(ceil(distance / ball_speed));
}
const int pass_time[team_members][team_members] = {{0, time_to_pass(0, 1), time_to_pass(0, 2), time_to_pass(0, 3), time_to_pass(0, 4)}, {time_to_pass(1, 0), 0, time_to_pass(1, 2), time_to_pass(1, 3), time_to_pass(1, 4)},{time_to_pass(2, 0), time_to_pass(2, 1), 0, time_to_pass(2, 3), time_to_pass(2, 4)}, {time_to_pass(3, 0), time_to_pass(3, 1), time_to_pass(3, 2), 0, time_to_pass(3, 4)}, {time_to_pass(4, 0), time_to_pass(4, 1), time_to_pass(4, 2), time_to_pass(4, 3), 0}};
int intercept_probability(player_id_t player, player_id_t target, int time){
    int i = 0;
    double prob = 0.0;
    while(i &lt; opponents){
        double dist = distance_between(player_pos[target][0], player_pos[target][1], opponent_pos[i][0], opponent_pos[i][1]);
        double time_to_reach = dist / player_speed;
        double time_within_reach = time - time_to_reach;
        if(time_within_reach &gt; 0){
            prob = prob + 10.0;
        }
        i += 1;
    }
    return fint(round(prob));
}
</declaration>
	<template>
		<name x="5" y="5">TeamPlayer</name>
		<parameter>const player_id_t id</parameter>
		<declaration>clock X;</declaration>
		<location id="id0" x="-3612" y="434">
			<name x="-3638" y="391">Dribble</name>
		</location>
		<location id="id1" x="-2482" y="434">
			<name x="-2464" y="425">Free</name>
		</location>
		<location id="id2" x="-3442" y="433">
			<name x="-3502" y="391">InPossesion</name>
			<urgent />
		</location>
		<location id="id3" x="-3238" y="433">
			<name x="-3264" y="382">Passing</name>
			<label kind="invariant" x="-3298" y="399">X&lt;=pass_time[id][pass_target]</label>
		</location>
		<location id="id4" x="-2711" y="433">
			<committed />
		</location>
		<location id="id5" x="-3153" y="136">
			<name x="-3170" y="102">Start</name>
			<urgent />
		</location>
		<location id="id6" x="-3280" y="263">
			<label kind="invariant" x="-3263" y="263">X&lt;=1</label>
		</location>
		<branchpoint id="id7" x="-2983" y="433">
		</branchpoint>
		<init ref="id5" />
		<transition>
			<source ref="id2" />
			<target ref="id0" />
		</transition>
		<transition controllable="false">
			<source ref="id6" />
			<target ref="id2" />
			<label kind="guard" x="-3399" y="305">X==1</label>
		</transition>
		<transition controllable="false">
			<source ref="id5" />
			<target ref="id1" />
			<label kind="guard" x="-2932" y="213">id != 0</label>
		</transition>
		<transition controllable="false">
			<source ref="id5" />
			<target ref="id6" />
			<label kind="guard" x="-3272" y="178">id == 0</label>
			<label kind="assignment" x="-3391" y="322">X=0</label>
		</transition>
		<transition controllable="false">
			<source ref="id3" />
			<target ref="id7" />
			<label kind="guard" x="-3221" y="451">X&lt;=pass_time[id][pass_target]</label>
		</transition>
		<transition>
			<source ref="id7" />
			<target ref="id4" />
			<label kind="assignment" x="-2974" y="492">possesion = -1, reward = 0</label>
			<label kind="probability" x="-2975" y="475">intercept_probability(id, pass_target, pass_time[id][pass_target])</label>
			<nail x="-2975" y="467" />
		</transition>
		<transition>
			<source ref="id7" />
			<target ref="id4" />
			<label kind="synchronisation" x="-2974" y="364">receive[pass_target]!</label>
			<label kind="probability" x="-2974" y="381">10</label>
			<nail x="-2975" y="399" />
		</transition>
		<transition controllable="false">
			<source ref="id4" />
			<target ref="id1" />
			<label kind="assignment" x="-2669" y="442">X=0, pass_target = -1</label>
		</transition>
		<transition>
			<source ref="id1" />
			<target ref="id2" />
			<label kind="synchronisation" x="-3093" y="619">receive[id]?</label>
			<label kind="assignment" x="-3093" y="585">X = 0, ball_possesor_x = player_pos[id][0], 
possesion = 1</label>
			<nail x="-2482" y="570" />
			<nail x="-3442" y="561" />
		</transition>
		<transition>
			<source ref="id2" />
			<target ref="id3" />
			<label kind="select" x="-3399" y="456">target : player_id_t</label>
			<label kind="guard" x="-3374" y="473">target != id</label>
			<label kind="assignment" x="-3408" y="492">pass_target = target</label>
		</transition>
	</template>
	<template>
		<name>Ball</name>
		<location id="id8" x="-306" y="-161">
			<label kind="invariant" x="-501" y="-136">reward'== possesion * (ball_possesor_x * position_factor) + (possesion * possesion_value)</label>
		</location>
		<init ref="id8" />
	</template>
	<system>player0 = TeamPlayer(0);
player1 = TeamPlayer(1);
player2 = TeamPlayer(2);
player3 = TeamPlayer(3);
player4 = TeamPlayer(4);
ball = Ball();
system player0, player1, player2, player3, player4, ball;</system>
	<queries>
		<query>
			<formula>strategy BestPasses = maxE(reward) [&lt;=10]: &lt;&gt; T == 10</formula>
			<comment />
		</query>
		<query>
			<formula>saveStrategy("/home/albot/Desktop/passingstrat",BestPasses)</formula>
			<comment />
		</query>
	</queries>
</nta>